CREATE TABLE StockBySize(
StockBySizeId INT PRIMARY KEY IDENTITY(1,1),
XS DECIMAL   NOT NULL,
S DECIMAL    NOT NULL,
M DECIMAL    NOT NULL,
L DECIMAL    NOT NULL,
XL DECIMAL   NOT NULL,
XXL DECIMAL  NOT NULL,
XXXL DECIMAL NOT NULL,
EU34 DECIMAL NOT NULL,
EU35 DECIMAL NOT NULL,
EU36 DECIMAL NOT NULL,
EU37 DECIMAL NOT NULL,
EU38 DECIMAL NOT NULL,
EU39 DECIMAL NOT NULL,
EU40 DECIMAL NOT NULL,
EU41 DECIMAL NOT NULL,
EU42 DECIMAL NOT NULL,
EU43 DECIMAL NOT NULL,
EU44 DECIMAL NOT NULL,
EU45 DECIMAL NOT NULL,
EU46 DECIMAL NOT NULL,
EU47 DECIMAL NOT NULL,
EU48 DECIMAL NOT NULL,
EU49 DECIMAL NOT NULL
);
CREATE TABLE Client(
ClientId INT PRIMARY KEY IDENTITY(1,1),
ClientFullName VARCHAR(50) NOT NULL,
ClientEmail VARCHAR(50) NOT NULL,
ClientCI VARCHAR(20) NOT NULL,
ClientPhoneNumber VARCHAR(20) NOT NULL,
ClientDepartament VARCHAR(20) NOT NULL,
ClientCity VARCHAR(20) NOT NULL,
ClientAddressBill VARCHAR(50) NOT NULL,
ClientToHome BIT NOT NULL,
primary key(ClientEmail)
);
CREATE TABLE Sale(
SaleId INT PRIMARY KEY IDENTITY(1,1),
SaleAmount DECIMAL NOT NULL,
SaleDate DATETIME DEFAULT GETDATE(),
ClientId INT NOT NULL FOREIGN KEY REFERENCES Client(ClientId)
);
CREATE TABLE Departament(
DepartamentId INT PRIMARY KEY IDENTITY(1,1),
DepartamentName VARCHAR(20) NOT NULL,
DepartamentIsTypeShoes BIT NOT NULL,
DepartamentIsDeleted BIT NOT NULL
);
CREATE TABLE Family(
FamilyId INT PRIMARY KEY IDENTITY(1,1),
FamilyName VARCHAR(20) NOT NULL,
FamilyIsDeleted BIT NOT NULL,
DepartamentId INT NOT NULL FOREIGN KEY REFERENCES Departament(DepartamentId)
);
CREATE TABLE Product(
ProductId INT PRIMARY KEY IDENTITY(1,1),
ProductCode NVARCHAR(10) NOT NULL,
ProductName VARCHAR(20) NOT NULL,
ProductDescription VARCHAR(50) NOT NULL,
ProductImage NVARCHAR(MAX) NOT NULL,
ProductGenre VARCHAR(15) NOT NULL,
ProductColor NVARCHAR(50) NOT NULL,
ProductPrice DECIMAL NOT NULL,
ProductIsDeleted BIT NOT NULL,
StockBySizeId INT NOT NULL FOREIGN KEY REFERENCES StockBySize(StockBySizeId),
FamilyId INT NOT NULL FOREIGN KEY REFERENCES Family(FamilyId)
);
CREATE TABLE LineSale(
LineSaleId INT NOT NULL IDENTITY(1,1),
LineSaleProductQuantity INT NOT NULL,
LineSaleProductPrice DECIMAL NOT NULL,
ProductId INT FOREIGN KEY REFERENCES Product(ProductId),
SaleId INT FOREIGN KEY REFERENCES Sale(SaleId),
primary key(LineSaleId, ProductId, SaleId)
);
